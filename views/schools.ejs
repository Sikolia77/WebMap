<html lang="en">

<head>
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <title>Kenya Data WebMap</title>
</head>

<body>
    <div class="information">
        <nav>
            <a href="index">Nairobi County</a>
            <a href="constituencies">Constituencies</a>
            <a href="roads">Roads</a>
            <a href="schools">Schools</a>
            <a href="settlements">Settlements</a>
            <a href="health">Health Facilities</a>
            <a href="protected">Protected Areas</a>

        </nav>
    </div>
    <div class="titles">
        <h3>Secondary Schools in Nairobi</h3>
    </div>
    <div id="map" style="height: 100vh;width: 100%;">

        <!-- REQUIRED - leaflet js link  -->
        <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
        <!-- REQUIRED jquery link  -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>


        <script>
            //Define some constants like map center, the basemap url (we are using openstreetmap)
            let details = {
                coordinates: {
                    y: -1.286389,
                    x: 36.817223,
                },
                url: "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
                attribution:
                    'Open Steet Map',
            };

            // initialize a map object
            var map = L.map('map', {
                    center: [39.73, -104.99],
                    zoom: 10,
                    layers: [osm, cities]
                });
            // map = L.map("map").setView([details.coordinates.y, details.coordinates.x], 15); // initialize map view

            //load the basemap
            L.tileLayer(details.url, {
                attribution: details.attribution,
                apikey: "",
            }).addTo(map);

            //Style for line data
            let RoadStyle = {
                "color": "red",
                "weight": 2,
                "opacity": 0.65
            }
            displayData('', RoadStyle)

            //style for polygon data
            let PolygonStyle = {
                "color": "black",
                "weight": 5,
                "opacity": 1,
                "fillOpacity": 0
            }
            displayData('WebMap:NairobiCounty', PolygonStyle)
            

            //style for point data
            let PointStyle = {
                radius: 8,
                // fillColor: "#ff7800",
                // color: "#000",
                weight: 1,
                opacity: 1,
                fillOpacity: 0.8
            };

            displayData('WebMap:NairobiSecScls', PointStyle)
            // //load vector data from geoserver


            // //DO NOT MODIFY THIS FUNCTION
            // // a function that waits for the data to be fetched and displays it on the map
            function displayPointData(layername, style) {
                //this functions waits for the data to be loaded and displays it on a map
                $.when(addWFSLayer(layername)).done(data => {
                    let layer = L.geoJSON(data, {
                        pointToLayer: function (feature, latlng) {
                            return L.circleMarker(data, style);
                        }
                    }).addTo(map);
                    //fits the map to layer
                    map.fitBounds(layer.getBounds())
                })
            }

            // //DO NOT MODIFY THIS FUNCTION
            // // a function that waits for the data to be fetched and displays it on the map
            function displayData(layername, style) {
                //this functions waits for the data to be loaded and displays it on a map
                $.when(addWFSLayer(layername)).done(data => {
                    let layer = L.geoJSON(data, {
                        style: style
                    }).addTo(map);
                    //fits the map to layer
                    map.fitBounds(layer.getBounds())
                })
            }
            // //DO NOT MODIFY THIS FUNCTION
            // //a function that fetches data from geoserver
            async function addWFSLayer(typename) {
                var response = await $.ajax({
                    url: `http://demo.osl.co.ke/geoserver/${typename.split(':')[0]}/wfs?request=GetFeature&version=1.0.0&typeName=${typename}&outputFormat=json`,
                    dataType: "json",
                    success: console.log(`${typename.split(':')[1]} loaded succesfully`),
                    error: function (xhr) {
                        console.log(xhr)
                    }
                })
                return response
            }

        </script>
    </div>

</body>

</html>